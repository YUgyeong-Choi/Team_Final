#pragma once


namespace Client
{
	enum class EPlayerState
	{
		IDLE, WALK, RUN, JUMP, FALL, LANDING, ATTACK, HIT, DEAD, END
	};


	enum class LEVEL { STATIC, LOADING, LOGO, KRAT_CENTERAL_STATION, KRAT_HOTEL, YG, CY, GL, DH, YW, JW,END };


#pragma region CY
	enum EFFECT_TYPE { EFF_SPRITE, EFF_PARTICLE, EFF_MESH, EFF_TRAIL, EFF_END };
	enum SPRITEEFFECT_PASS_INDEX { SE_DEFAULT, SE_SOFTEFFECT, SE_UVSPRITE, SE_UVSPRITE_COLOR, SE_END };
	enum MESHEFFECT_PASS_INDEX { ME_DEFAULT, ME_MASKONLY, ME_MASKNOISE, ME_UVMASK, ME_END };
	enum PARTICLEEFFECT_PASS_INDEX { PE_DEFAULT, PE_MASKONLY, PE_END };

	enum INTERPOLATION {
		INTERPOLATION_LERP,
		INTERPOLATION_EASEOUTBACK,
		INTERPOLATION_EASEOUTCUBIC,
		INTERPOLATION_EASEINQUAD,
		INTERPOLATION_EASEOUTQUAD,
		INTERPOLATION_END
	};
#pragma endregion

#pragma region GL
	enum UI_PASS_INDEX { UI_DEFAULT = 0, UI_SOFTEFFECT, UI_DISCARD_DARK, UI_DISCARD_ALAPH, 
						UI_BLEND, UI_BLEND_DISCARD_ALAPH, UI_BLEND_DISCARD_DARK, UI_FADE,
						UI_FONT,
						UI_END};

	enum DYNAMIC_UI_PASS_INDEX {
		D_UI_DEFAULT = 0, D_UI_SOFTEFFECT, D_UI_SPRITE, D_UI_FADE,
		D_UI_BUTTON, D_UI_HPBAR,
		D_UI_END
	};

	
	enum class UI_TYPE {STATIC, DYNAMIC, TEXT , END};

#pragma endregion

#pragma region YW
	enum class COLLIDER_TYPE { NONE, CONVEX, TRIANGLE, END };
#pragma endregion

	enum INTERPOLATION_CAMERA
	{
		NONE,
		LERP,
		CATMULLROM
	};

	enum class CUTSCENE_TYPE
	{
		ONE, TWO, THREE
	};
}


