#pragma once


namespace Client
{
	enum class EPlayerState
	{
		IDLE, WALK, RUN, JUMP, FALL, LANDING, WEAKATTACKA, WEAKATTACKB, STRONGATTACKA, STRONGATTACKB, CHARGEA, CHARGEB, DEAD, SWITCHWEAPON, GARD, BACKSTEP,
		ROLLING, USEITEM, SHILD, EQUIP, SPRINT, SPRINTATTACKA, SPRINTATTACKB, ARMATTACKA, MAINSKILL, ARMATTACKB, ARMATTACKCHARGE, ARMFAIL, 
		HITED, FATAL, END
	};

	enum EELEMENT
	{
		FIRE = 0,
		WATER,
		ELECTRIC,

		ELEMENT_END
	};

	enum class HITMOTION { NONE_MOTION,STRONG_KNOCKBACK, KNOCKBACK, UP, FURY_STAMP, STAMP,NORMAL, END }; //필요한거 추가하시오

	enum class LEVEL { STATIC, LOADING, LOGO, KRAT_CENTERAL_STATION, KRAT_HOTEL, YG, CY, GL, DH, YW, JW,END };


#pragma region CY
	enum EFFECT_TYPE { EFF_SPRITE, EFF_PARTICLE, EFF_MESH, EFF_TRAIL, EFF_ONETRAIL, EFF_END };
	enum SPRITEEFFECT_PASS_INDEX { SE_DEFAULT, SE_SOFTEFFECT, SE_UVSPRITE, SE_UVSPRITE_COLOR, SE_UVSPRITE_COLOR_WB, SE_MASKONLY, SE_MASKNOISE, SE_DISTORTIONONLY, SE_DISTORTIONNOMASK, SE_END };
	enum MESHEFFECT_PASS_INDEX { ME_DEFAULT, ME_MASKONLY, ME_MASKNOISE, ME_UVMASK, ME_MASKONLY_WB, ME_END };
	enum PARTICLEEFFECT_PASS_INDEX { PE_DEFAULT, PE_MASKONLY, PE_WB, PE_WB_VSTRETCH, PE_NONLIGHT, PE_RAIN, PE_WB_DIFFUSE, PE_WB_MASKDISSOLVE, PE_END };
	enum TRAILEFFECT_PASS_INDEX { TE_DEFAULT, TE_DROP, TE_END };

	enum TEXUSAGE { TU_DIFFUSE, TU_MASK1, TU_MASK2, TU_MASK3, TU_END };

	enum INTERPOLATION {
		INTERPOLATION_LERP,
		INTERPOLATION_EASEOUTBACK,
		INTERPOLATION_EASEOUTCUBIC,
		INTERPOLATION_EASEINQUAD,
		INTERPOLATION_EASEOUTQUAD,
		INTERPOLATION_END
	};

	enum TRAILTYPE { TRAIL_DEFAULT, TRAIL_SKILL_BLUE, TRAIL_SKILL_RED, TRAIL_BLOOD, TRAIL_END };
#pragma endregion

#pragma region GL
	enum UI_PASS_INDEX { UI_DEFAULT = 0, UI_SOFTEFFECT, UI_DISCARD_DARK, UI_DISCARD_ALAPH, 
						UI_BLEND, UI_BLEND_DISCARD_ALAPH, UI_BLEND_DISCARD_DARK, UI_FADE,
						UI_FONT,
						UI_END};

	enum DYNAMIC_UI_PASS_INDEX { 
		D_UI_DEFAULT = 0, D_UI_SOFTEFFECT, D_UI_SPRITE, D_UI_FADE,
		D_UI_BUTTON, D_UI_HPBAR, D_UI_MANABAR, D_UI_ICON_ITEM,
		D_UI_DURABILITYBAR, D_UI_HPBAR_MONSTER, D_UI_BG,
		D_UI_DISARD_REVERSE, D_UI_ACTION_ICON, D_UI_REVIVE,
		D_UI_DISCARD_DARK,
		D_UI_END
	};

	enum class TEXTALIGN{ LEFT, CENTER, RIGHT, END };
	
	enum class SPAWN_TYPE {IDLE, PATROL, STAND, SIT, END};

	

#pragma endregion

#pragma region YW
	enum class COLLIDER_TYPE { NONE, CONVEX, TRIANGLE, END };
	enum class LOD
	{
		LOD0 = 0,
		LOD1,
		LOD2,
		END
	};

	//별바라기 태그
	enum class STARGAZER_TAG 
	{
		OUTER,
		FESTIVAL_LEADER,
		FIRE_EATER,
		END
	};
	//아이템 태그
	enum class ITEM_TAG
	{
		COGWHEEL, //톱니바퀴
		PULSE_CELL, //펄스 전지
		ERGO_SHARD, //희미한 에르고 조각
		PASSENGER_NOTE, //승객의 쪽지
		END
	};
#pragma endregion

#pragma region YG
	enum class INTERPOLATION_CAMERA
	{
		NONE,
		LERP,
		CATMULLROM
	};

	enum class TARGET_CAMERA
	{
		NONE,
		PLAYER,
		BOSS1,
		BOSS2
	};

	enum class CUTSCENE_TYPE
	{
		WAKEUP, TUTORIALDOOR, OUTDOOOR, FUOCO, FESTIVAL
	};

	enum INTERACT_TYPE
	{
		TUTORIALDOOR, SHORTCUT, OUTDOOR, FESTIVALDOOR, FUOCO
	};

	enum class TRIGGERSOUND_TYPE
	{
		TUTORIAL_1,
		MONADLIGHT,
		TUTORIAL_2,
		SELECTWEAPON,
		STATIONINFO,
		TURNONLAMP
	};

	enum class TRIGGERUI_TYPE
	{
		STATIONTITLE,
		GUARD,
		LOCK
	};

#pragma endregion

#pragma region JW
	enum class EUnitType
	{
		NONE,
		NORMAL_MONSTER,
		ELITE_MONSTER,
		BOSS,
		PLAYER,
		NPC
	};
#pragma endregion
}


